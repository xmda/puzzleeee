<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<html>
<head>
<title>Puzzle</title>
</head>
<body bgcolor=white >
<div align=center><center>
<script language="JavaScript1.1" type="text/javascript">
<!--
version=1.1;
// -->
</script>
<script language="JavaScript" type="text/javascript">
</script>

<script language="JavaScript1.1" type="text/javascript">
<!--
function cargar(){
    this.length=cargar.arguments.length;
	console.log(cargar.arguments.length);
    for (var i=0;i<this.length;i++){
        this[i]=new Image();
        this[i].src=cargar.arguments[i];
    }
}

var pics=new cargar("fift0l.gif","fift1l.gif","fift2l.gif","fift3l.gif","fift4l.gif",
                                        "fift5l.gif","fift6l.gif","fift7l.gif","fift8l.gif","fift9l.gif",
                                        "fift0r.gif","fift1r.gif","fift2r.gif","fift3r.gif","fift4r.gif",
                                        "fift5r.gif","fift6r.gif","fift7r.gif","fift8r.gif","fift9r.gif",
                                        "fiftbl.gif","fiftbr.gif","blank.gif",
                                        "edit.gif","edit2.gif",
                                        "solve.gif","solve2.gif",
                                        "mix.gif","reset.gif",
                                        "play.gif","pause.gif"
                                        
                                        );
var posit = new Array ();
var maxfila = 10;         //altura maxima
var maxwid = 10;        //anchura maxima
var fila = 4;            //altura del cuadro; 2-maxfila
var wid = 4;            //ancho del cuadro; 2-maxwid
var siz = 15;           //cantidad de casilleros del cuadro.
var mode = 0;           //0=normal  1=revolver  2=editar  3=resolver
var seq = new Array();  //secuencia de la solucion
var edt;                //siguiente pieza a colocar en el modo 2
var cerox,ceroy;        //posicion del cero

function initbrd(){
    cerox=wid-1;
    ceroy=fila-1;
    for(i=0;i<=siz;i++) posit[i]=i;
}

function displaybrd(k){
    console.log(document.images.length);
    var c=0;  
    var d=0;  
    var i,j;
    for (i=0;i<fila;i++){
        for (j=0;j<wid;j++){
            if(posit[c]>=0 && posit[c]<siz){
                document.images["pcl"+d].src=pics[Math.floor((posit[c]+1)/10)].src;
                document.images["pcr"+d].src=pics[10+((1+posit[c])%10)].src;
            }else{
                document.images["pcl"+d].src=pics[20].src;
                document.images["pcr"+d].src=pics[21].src;
            }
            c++;
            d++;
        }
        if(k){
            for (;j<10;j++){
                document.images["pcl"+d].src=pics[22].src;
                document.images["pcr"+d].src=pics[22].src;
                d++;
            }
        }else{
            d+=10-j;
        }
    }
    if(k){
        for (;i<maxfila;i++){
            for (var j=0;j<maxwid;j++){
                document.images["pcl"+d].src=pics[22].src;
                document.images["pcr"+d].src=pics[22].src;
                d++;
            }
        }
    }
}
function displaybut(){
    if(mode==2) document.images["edit"].src=pics[24].src;
    else document.images["edit"].src=pics[23].src;
    if(mode>=3) document.images["solve"].src=pics[26].src;
    else document.images["solve"].src=pics[25].src;
    if(mode==4) document.images["play"].src=pics[30].src;
    else document.images["play"].src=pics[29].src;

    if(mode==1 && resuelto()){
        alert("Solucionado");
        mode=0;
    }
}
function display(k){
    displaybrd(k);
    displaybut();
}


document.writeln("<table cellpadding=0 cellspacing=0 border=0>");
document.writeln("<tr><td align=center>");
document.writeln("<\/td><\/tr><tr><td height=5><\/td><\/tr><tr><td align=center>");
document.write("<a href='javascript:mix();'><img src='"+pics[27].src+"' height=16 width=48 border=0><\/a>");
document.write("<a href='javascript:reset();'><img src='"+pics[28].src+"' height=16 width=48 border=0><\/a>");
document.write("<a href='javascript:edit();'><img src='"+pics[23].src+"' height=16 width=48 border=0 name='edit'><\/a>");
document.write("<a href='javascript:solve();'><img src='"+pics[25].src+"' height=16 width=48 border=0 name='solve'><\/a>");
document.write("<a href='javascript:solplay();'><img src='"+pics[30].src+"' height=16 width=48 border=0 name='play'><\/a>");
document.writeln("<\/td><\/tr><tr><td height=5><\/td><\/tr><\/table>");
document.writeln("<table cellpadding=0 cellspacing=0 border=0>");
var c=0;
for(var i=0;i<maxfila;i++){
    document.writeln("<tr>");
    for(var j=0;j<maxwid;j++){
        document.writeln("  <td width=20><a href='javascript:clicked("+i+","+j+");focus();'>"+
            "<img src='"+pics[22].src+"' height=20 width=10 border=0 name='pcl"+c+"'>"+
            "<img src='"+pics[22].src+"' height=20 width=10 border=0 name='pcr"+c+"'>"+
            "<\/a><\/td>");
        c++;
    }
    document.writeln("<\/tr>");
}
document.writeln("<\/table>");

function reset(){
    initbrd();
    mode=0;
    display(0);
}

reset();

function size(y,x){
    if(fila+y>=2 && fila+y<=maxfila && wid+x>=2 && wid+x<=maxwid){
        fila+=y;
        wid+=x;
        siz=fila*wid-1;
        initbrd();
        mode=0;
        display(1);
    }
}

function resuelto(){
    for (var i=siz;i>=0;i--){
        if(posit[i]!=i) return(false);
    }
    return(true);
}


function imposible(){
    for (var i=siz;i>=0;i--){
        if(posit[i]==i) return(true);
    }
    return(false);
}
function mix(){
    var i,j,c=0;
    var pcs=new Array();
    for(i=0;i<=siz;i++) pcs[i]=i;
    pcs[siz-1]=-1;pcs[siz-2]=-1;
    for(i=0;i<fila;i++){
        for(j=0;j<wid;j++){
            k=Math.floor(Math.random()*pcs.length);
            posit[c]=pcs[k];
            if(pcs[k]==siz) { cerox=j; ceroy=i; }
            pcs[k]=pcs[pcs.length-1];
            pcs.length--;
            c++;
        }
    }
    mode=1;
    filltwo();
}

function edit(){
    mode=2;
    //limpiar tablero
    for (var i=0;i<=siz;i++) posit[i]=-1;
    edt=0;   
    display(0);
}

function filltwo(){
    // primero se rellenan los 2 ultimos casilleros
    var s1=-1;
    var s2=-1;
    for(var i=0;i<=siz;i++){
        if(posit[i]==-1){
            if(s1<0) {
                s1=i;
                posit[s1]=siz-1;
            }else{
                s2=i;
                posit[s2]=siz-2;
                break;
            }
        }
    }
    
    var c=0;
    for(var i=1;i<=siz;i++){
        for(var j=0;j<i;j++){
            if(posit[j]>posit[i])c++;
        }
    }
    //verificar posicion de 0
    c+=(wid-1)-cerox+(fila-1)-ceroy;

    //paridad impar
    if(c&1){
        posit[s1]=siz-2;
        posit[s2]=siz-1;
    }
    display(0);
}

function clicked(y,x){
    var c=y*wid+x;
    if(mode==2){  // opcion 2:editar
        if(posit[c]<0){
            posit[c]=edt; show(y,x);
            edt++;
            if(edt==siz-2) edt+=2
            if(edt>siz){ // llena todos los casilleros, menos 2.Llenar esos para la permutacion correcta
                cerox=x;ceroy=y;
                filltwo();
                mode=1;
                displaybut();
            }
        }
    }else if(mode!=4){  //moviendolos
        if      (x==cerox && y<fila){
            while(y>ceroy) { domove(2); show(ceroy-1,cerox);}
            while(y<ceroy) { domove(1); show(ceroy+1,cerox);}
        }else if (y==ceroy && x<wid){
            while(x>cerox) { domove(3); show(ceroy,cerox-1);}
            while(x<cerox) { domove(0); show(ceroy,cerox+1);}
        }
        if(mode==3) { mode=0; displaybut(); }
        show(ceroy,cerox);
        if(mode==1 && resuelto()){
            alert("You resuelto it!\nYou don't get a prize for this though!");
            mode=0;
        }
    }
}
function show(y,x){
    //  actualiza como se ve el casillero...de uno en uno
    var c=y*wid+x;
    var d=y*maxwid+x;
    if(posit[c]>=0 && posit[c]<siz){
        document.images["pcl"+d].src=pics[Math.floor((posit[c]+1)/10)].src;
        document.images["pcr"+d].src=pics[10+((1+posit[c])%10)].src;
    }else{
        document.images["pcl"+d].src=pics[20].src;
        document.images["pcr"+d].src=pics[21].src;
    }
}

function push(){
    // pone la lista en la lista de movimientos de solucion.
    for (var i=0;i<push.arguments.length;i++){
        var c=push.arguments[i];
        if(seq.length && seq[seq.length-1]+c==3) seq.length--;
        else seq[seq.length]=c;
        domove(c);
    }
}

function domove(m){  //0=derecha, 1=abajo, 2=arriba, 3=izquierda
    //muestra el numero en el casillero cada vez que se hace un cambio
    var d=cerox+ceroy*wid;
    if(m==0)     { posit[d]=posit[d-1  ]; posit[d-1  ]=siz; cerox--; }
    else if(m==1){ posit[d]=posit[d-wid]; posit[d-wid]=siz; ceroy--; }
    else if(m==2){ posit[d]=posit[d+wid]; posit[d+wid]=siz; ceroy++; }
    else if(m==3){ posit[d]=posit[d+1  ]; posit[d+1  ]=siz; cerox++; }
}


//SOLUCION
var soltimer;
function solplay(){
    if(mode==4){
        
        clearTimeout(soltimer);
        mode=3;
        displaybut();
    }else if(mode!=2){
        
        solve();
        if(mode==3){
            mode=4;
            soltimer=setTimeout("playstep()", 50);
            displaybut();
        }
    }
}
function playstep(){
    if(mode>=3){
        mode=4;
        solve();
        if(mode>=3) soltimer=setTimeout("playstep()", 50);
    }else{
        displaybut();
    }
}


var blocksolve=0;
function solve(){
    if(mode==0||mode==1){
        mode=3;blocksolve=1;displaybut();
        seq.length=0;

        var back = new Array();
        for(var i=0;i<=siz;i++) back[i]=posit[i];
        back[siz+1]=cerox;
        back[siz+2]=ceroy;

        
        var rr=0;
        for(var r=0; r<fila-2;r++){
            for(var c=0;c<wid;c++) moverpieza(rr+c,r,c);
            rr+=wid;
        }

       
        for(c=0;c<wid-2;c++){
       
            moverpieza(rr,fila-2,c);
           if(cerox==c) push(3);  //llena el lugar de destino
            if(posit[rr+wid]!=rr+wid){
                moverpieza(rr+wid,fila-1,c+1);
                if(ceroy!=fila-1) {    //0=derecha, 1=abajo, 2=arriba, 3=izquierda
                    //A.X o AX.
                    //XBX    XBX
                    if( cerox==c+1 ) push(3);
                    push(2);
                }
                //AXX
                //XB.
                while( cerox>c+2 ) push(0);
                push(0,0,1,3,2,3,1,0,0,2,3);
            }
            rr++;
        }
        //para el ultimo cuadro 2x2
        if(cerox<wid-1) push(3);
        if(ceroy<fila-1) push(2);
        rr=siz-wid-1;
        if(posit[rr]==rr+1)   push(1,0,2,3);
        if(posit[rr]==rr+wid) push(0,1,3,2);
        //restaura las piezas
        for(var i=0;i<=siz;i++) posit[i]=back[i];
        cerox=back[siz+1];
        ceroy=back[siz+2];
        blocksolve=0;
    }

    if(mode>=3 && blocksolve==0){
        blocksolve=1;
        // realiza el siguiente movimiento de la secuencia pregrabada
        if(seq.length){
            // var c=seq.shift();
            var c=seq[0];
            for(var i=1;i<seq.length;i++) seq[i-1]=seq[i];
            seq.length--;
            domove(c);
            if(c==0) show(ceroy,cerox+1);
            else if(c==1) show(ceroy+1,cerox);
            else if(c==2) show(ceroy-1,cerox);
            else if(c==3) show(ceroy,cerox-1);
            show(ceroy,cerox);
        }
        if(seq.length==0) { mode=0; displaybut(); }
        blocksolve=0;
    }
}
function moverpieza(p,y,x){
    //MUEVE PIEZA P A LA POSICION Y 
    var c=-1;
    for(var i=0;i<fila;i++){
        for(var j=0;j<wid;j++){
            c++;
            if(posit[c]==p) break;
        }
        if(posit[c]==p) break;
    }
    //Mueve la pieza        //0=derecha, 1=abajo, 2=arriba, 3=izq
    if(j<x && ceroy==y) push(2);    
    while(j>x){
        //mueve la pieza a la izquierda.
        //traslada el primer espacio a su izquierda 
        if(ceroy==i && cerox>j){    //condicion para cuando esta en blanco 
            if(i==fila-1) push(1); else push(2); //entonces, se mueve a otra fila
        }
        while(cerox>=j) push(0);    // mover al espacio en blanco que esta en la columna izquierda de la pieza
        while(cerox<j-1) push(3);
        while(ceroy<i) push(2);     // moverlo a la misma fila de la pieza
        while(ceroy>i) push(1);
        push(3);                    // mover la pieza a la izquierda
        j--;
    }
    while(j<x){
        // mover la pieza a la derecha
        // / Primero mueve en blanco a la parte derecha de la pieza 
        if(ceroy==i && cerox<j){
            if(i==fila-1) push(1); else push(2);
        }
        while(cerox<=j) push(3);
        while(cerox>j+1) push(0);
        while(ceroy<i) push(2);
        while(ceroy>i) push(1);
        push(0);
        j++;
    }

       //0=derecha, 1=abajo, 2=arriba, 3=izquierda
    while(i>y){
        if(y<i-1){
            while(ceroy<i-1) push(2);
            if(cerox==j) push( j==wid-1? 0:3);
            while(ceroy>i-1) push(1);
            while(cerox<j) push(3);
            while(cerox>j) push(0);
            push(2);
        }else{
            if(j!=wid-1){
                if(ceroy==i) push(2);
                while(cerox<j+1) push(3);
                while(cerox>j+1) push(0);
                while(ceroy>i-1) push(1);
                while(ceroy<i-1) push(2);
                push(0,2);
            }else{
                if(ceroy<i && cerox==j){
                    while(ceroy<i) push(2);
                }else{
                    while(ceroy>i+1) push(1);
                    while(ceroy<i+1) push(2);
                    while(cerox<j) push(3);
                    while(cerox>j) push(0);
                    push(1,1,0,2,3,2,0,1,1,3,2);
                }
            }
        }
        i--;
    }
    while(i<y){
        if(cerox==j && ceroy<i){
            if(j==wid-1) push(0); else push(3);
        }
        while(ceroy>i+1) push(1);
        while(ceroy<i+1) push(2);
        while(cerox<j) push(3);
        while(cerox>j) push(0);
        push(1);
        i++;
    }
}




// -->
</script>

</center></div>
</body>
</html>
